# 1-my_list.txt
# Mark Oladeinde <markoladeinde@gmail.com>

=======================
How to Use 1-my_list.py
=======================

This module defines a class ``MyList`` that inherits from ``list``.

Instantiation
=============

``MyList`` can be instantiated with no arguments, which will return an empty list.

Or a single argument, which must be an iterable object.

A ``TypeError`` will be raised for any more than one instantiation arguments.

Usage
=====

``MyList`` is an inherited ``list`` class, and thus features the same methods.
For instance, elements can be added to a ``MyList`` with the ``append()`` method.

And removed with the ``remove()`` method.

``print_sorted`` Method
=======================

``MyList`` implements a single method - a public instance method
``print_sorted(self)``.

The method takes no arguments - a TypeError will be raised if an argument is provided.

The method prints the list in ascending sorted order.

The order of the original list is not altered after a call to the method.

Note that lists of strings are sorted lexographically.

Another friendly reminder that the original list is unaltered.

Nothing to sort with empty lists.

If ``print_sorted(...)`` is called on a list of different types, a TypeError will be raised.
